# This Nix expression builds a WordPress theme and a Composer project for the Caravan Club website.

{
  pkgs,
  nix-filter,
  lib,
  ...
}:

let
  php = pkgs.php83;

  nodeBuild = pkgs.buildNpmPackage {
    version = "1.0.0";
    name = "bedrock-wp-theme";
    src = ./.;

    __noChroot = false; # Allow or disallow build-step to operate outside sandbox

    buildPhase = ''
      rm .gitignore
      npm run build
    '';

    # Use terminal command `prefetch-npm-deps package-lock.json` to generate hash
    npmDepsHash = "sha256-W+YK9f0UbAHz59lvlX+dHAQ3Ri3KJZlHBd3u9IC9F8o=";
  };

  composerBuild = php.buildComposerProject {
    pname = "bedrock-wp"; # Project name.
    version = "1.0.0"; # Version of the project.
    nativeBuildInputs = with pkgs; [ rsync ]; # Native build inputs.
    src = ./.;
    __noChroot = false; # Allow or disallow build-step to operate outside sandbox
    composerStrictValidation = false; # Disable strict validation for Composer.

    postInstall = ''
      # Define paths for project folders.
      PUBLIC_CONTENT=$out/share/php/bedrock-wp/app
      PLUGINS=$out/share/plugins
      MU_PLUGINS=$out/share/mu-plugins

      mkdir -p "$MU_PLUGINS"

      # Sync to public to not have to rely on external symlinks generated by composer.
      ls -a ${nodeBuild}/lib/node_modules/bedrock-base/web/app
      cp -rvL ${nodeBuild}/lib/node_modules/bedrock-base/web/app $PUBLIC_CONTENT
    '';

    # Run `nix build` and wait for the error
    # In the error response you'll se Nix complain about hash mismatch
    # Copy the "Got" has and paste below and run `nix build` again
    vendorHash = "sha256-L2c7xKho3jzvD5gOEpWY+/aG2lmLMC6KTHbORKBuvhg="; # Hash for Composer vendor directory.
  };
in
nix-filter {
  root = composerBuild;
  include = [
    "${composerBuild}/share/php/bedrock-wp/vendor"
    "${composerBuild}/share/php/bedrock-wp/web"
    "${composerBuild}/share/php/bedrock-wp/config"
  ];
}
